-- walkingbass :: Pattern a -> Pattern a

-- let walkingbass :: Num a => Pattern a -> Pattern a
--     walkingbass pat = fmap (\x -> [pure (x + 2), pure(x + 1), pure(x - 1), pure(x)]) pat

let walkingbass :: Num a => Pattern a -> Pattern a
    walkingbass pat = unwrap $ fmap (\x -> fastcat[pure (x + 2), pure(x + 1), pure(x - 1), pure(x)]) pat



let walkingbass :: Pattern Double -> Pattern Double
    walkingbass pat = slowcat $ fmap (\x -> fastcat [pure (x + 2), pure(x + 1), pure(x - 1), pure(x)]) (segment 1 pat)

        
-- walkingbass pat = fastcat $ pat >>= \x -> [x + 2, x + 1, x - 1, x]
-- walkingbass pat = fastcat (pat >>= \x -> fastcat [x + 2, x + 1, x - 1, x])
-- walkingbass pat = fastcat (pat >>= (\x -> [x + 2, x + 1, x - 1, x]))
-- walkingbass pat = fastcat $ pat >>= (\x -> fastcat[x + 2, x + 1, x - 1, x])
        
-- "[2 1 -1 0]"


d1 $ walkingbass $ n "0 3 5 7" |+| n "-12" # s "supersaw" # voice 0

-- d2 $ sound "cp"


      --  (\x -> fastcat [x+2, x+1, x-1 x]))

fmap (\n -> n |+ 2) (n "0 3 5 7")



let notes = n "0 3 5 7"
  in fmap (\n -> fastcat [pure (n + 2), pure n]) (notes)


  fmap (\n -> fastcat [pure (n + 2), pure n]) (n "0 3 5 7")



n "0 3 5 7" |+| n "[2 0]*4"


let inputNotes = n "0 3 5 7"
in fastcat [pure (n + 2) # (i / 16) | (i, n) <- zip [0..] (toList inputNotes)]



let transposePattern :: Pattern Int -> Pattern Int -> Pattern Int
    transposePattern notes transpositions =
      let len = length $ queryArc notes -- Get the length of the note pattern
      in notes |+ (transpositions ~> len) -- Repeat the transposition pattern to match the length



-- Two Options
--Option 1
let walkingbass :: ControlPattern -> ControlPattern
    walkingbass = (||+ n"[2 1 -1 0]")

d1 $ walkingbass $ n "0 3 5 7" |+| n "-12" # s "supersaw" # voice 0

-- Option 2
let walkingbass :: Pattern Note -> Pattern Note
    walkingbass notes = notes ||+ "[[2 1 -1 0]|[1 -2 -1 0]]"

d1 $ slow 2 $ n (walkingbass "0 5 7 3") |+| n "-24" # s "supersaw" # voice 0 # shape 0.8 # legato 0.8

d2 $ slow 4 $ n (run 32) # sound "amencutup" # gain 1.4 # legato 1 # shape 0.8

d3 $ slow 2 $ n "0 5 7 3" # s "supersaw"

d1 $ n "0 3 5 7" ||+ n "[2 1 -1 0]" |+| n "-12" # s "supersaw" # voice 0
        